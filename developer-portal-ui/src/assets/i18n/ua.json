{
  "HEADER": {
    "GETTING_STARTED": "Початок роботи",
    "TEST_CASES": "Сценарії для тестування",
    "FAQ": "FAQ",
    "CONTACT": "Контакти"
  },
  "FOOTER": {
    "GETTING_STARTED": "Початок роботи",
    "TEST_CASES": "Сценарії для тестування",
    "FAQ": "FAQ",
    "CONTACT": "Контакти"
  },
  "HOME": {
    "HEADER": {
      "TITLE_1": "Портал розробника",
      "TITLE_2": "від adorsys",
      "SUBTITLE_1": "Створення нових цифрових",
      "SUBTITLE_2": "сервісів за допомогою",
      "SUBTITLE_3": "Відкрого Банкінгу"
    },
    "WHAT_IS": {
      "TITLE": "Що таке XS2ASandbox?",
      "CONTENT": {
        "THE": "",
        "XS2A": "XS2ASandbox",
        "PART_1": "- це динамічне середовище для тестування, яке повністю відповідає вимогам директиви PSD2 щодо надання API для Third-Party Providers (TPP). \nXS2ASandbox побудований на основі Berlin Group’s NextGen PSD2 специфікації для доступу до облікових записів (access to accounts - XS2A)",
        "PART_2": " та є сумісним з вимогами NISP.\nЦей портал розробника створений, щоб допомогти TPP розробникам почати роботу з XS2ASandbox."
      }
    },
    "HOW_TO": {
      "TITLE": "Як використовувати XS2ASandbox",
      "STEP_1": {
        "TITLE": "Крок 1",
        "CONTENT": "Ознайомтесь з інструкцією «Початок роботи»."
      },
      "STEP_2": {
        "TITLE": "Крок 2",
        "CONTENT": "Завантажте, встановіть та запустіть XS2ASandbox."
      },
      "STEP_3": {
        "TITLE": "Крок 3",
        "CONTENT": "Ознайомтесь з інструкцією «Сценарії для тестування» та розпочніть тестування."
      }
    },
    "PSD2": {
      "THE": "",
      "TITLE": "PSD2 та Відкритий Банкінг",
      "LINK": "Директива про надання платіжних послуг 2",
      "CONTENT": " (The Payment Service Directive 2 - PSD2) вимагає від банків - постачальників платіжних послуг\n(Account Servicing Payment Service Providers - ASPSP) надати повністю робочий інтерфейс\nдоступу до облікового запису (XS2A) третім особам (TPP) до вересня 2019 року.\nXS2A інтерфейс складається з банківських сервісів, які можуть ініціювати платежі (PIS), запитувати дані облікового запису (AIS)\nта отримувати підтвердження наявності коштів (PIIS). Для того, щоб банки гарантовано встигнули перейти на XS2A інтерфейс,\n PSD2 вимагає від банків створити повністю робочу динамічну пісочницю(Sandbox), яка забезпечує роботу XS2A інтерфейсу у невиробничому середовищі,\n до червня 2019 року."
    },
    "FEATURES": {
      "TITLE": "Функції та можливості XS2ASandbox",
      "CONTENT": "XS2ASandbox - це динамічне середовище: ви можете створювати користувачів, платежі та згоди на читання даних обікового запису,\nмодифікувати дані в процесі тестування.\nЗа інтерфейсу TPP UI ви можете отримати безпосередній доступ до банківського API, отримати TPP сертифікат для тестування і\nкерувати тестовими обліковами записами. Портал розробника містить інструкції з тестування та усі необхідні тести.\nВсі сервіси XS2ASandbox можна\nвстановити і запустити за допомогою однієї команди.\nПідтримуються два основні способи Strong Customer Authentication (SCA): redirect і embedded. Для redirect авторизації\nстворено інтерфейс онлайн-банкінгу.",
      "SLIDES": {
        "SLIDE_1": {
          "TITLE": "Вмикай та працюй",
          "CONTENT": "Готове до використання рішення, яке легко завантажити та встановити."
        },
        "SLIDE_2": {
          "TITLE": "Детальна документація",
          "CONTENT": "Повна архітектурна документація в проекті та інструкції з використання на порталі для розробників"
        },
        "SLIDE_3": {
          "TITLE": "Перевірені інструменти для тестування",
          "CONTENT": "Сервіс для генерації тестового TPP сертифікату та підтримка NISP тестів"
        },
        "SLIDE_4": {
          "TITLE": "Налаштовуємий користувацький інтерфейс",
          "CONTENT": "TPP-UI для керування обліковими записами користувачів на стороні банку"
        },
        "SLIDE_5": {
          "TITLE": "Турбота про клієнта",
          "CONTENT": "Гнучкі рішення проблем клієнтів та підтримка"
        },
        "SLIDE_6": {
          "TITLE": "Реалістична емуляція банку",
          "CONTENT": "Емуляція реальної банківської системи з вбудованим XS2A інтерфейсом"
        },
        "SLIDE_7": {
          "TITLE": "Велика кількість корисних сервісів",
          "CONTENT": "Сервіс для управління обіковими записами користувачів та акаунтам, сервіс для генерації тестових сертифікатів та реєстрації TPP, користувацькі інтерфейси\nта сервіси для проведення платежів"
        },
        "SLIDE_8": {
          "TITLE": "Продукт з відкритим віхидним кодом",
          "CONTENT": "Open source продукт, який доступний на GitHub та постійно оновлюється і підтримується розробниками"
        }
      }
    },
    "HISTORY": {
      "TITLE": "Історія продукту",
      "PRODUCT": {
        "POINT_1": {
          "TITLE": "Початок роботи над проектом лише з двома членами команди",
          "CONTENT": ""
        },
        "POINT_2": {
          "TITLE": "Передпоказ MVP 1.0",
          "CONTENT": "Embedded approach: PIS, AIS, PIIS"
        },
        "POINT_3": {
          "TITLE": "Демонстрація MVP 1.0",
          "CONTENT": "Підтримуються Embedded approach та Redirect approach"
        },
        "POINT_4": {
          "TITLE": "Реліз XS2A Sandbox 1.0",
          "CONTENT": "Підтримуються Redirect та Embedded approach, додано TPP-UI та Online Banking"
        },
        "POINT_5": {
          "TITLE": "Реліз версії 1.1",
          "CONTENT": "Підтримуються багаторівневий SCA та облікові записи з декількома валютами"
        }
      }
    },
    "QUESTIONS": {
      "TITLE": "Маєте питання?",
      "ASK": "Запитайте нашого спеціалиста."
    }
  },
  "GETTING_STARTED": {
    "INTRODUCTION": {
      "TITLE": "Вступ",
      "CONTENT": {
        "THE_1": "",
        "LINK": "Директива про надання платіжних послуг 2",
        "PART_1": "(The Payment Service Directive 2 - PSD2) вимагає від банків - постачальників платіжних послуг\n(Account Servicing Payment Service Providers - ASPSP) надати повністю робочий інтерфейс\nдоступу до облікового запису (XS2A) третім особам (TPP) до вересня 2019 року.\nXS2A інтерфейс складається з банківських сервісів, які можуть ініціювати платежі (PIS), запитувати дані облікового запису (AIS)\nта отримувати підтвердження наявності коштів (PIIS). Для того, щоб банки гарантовано встигнули перейти на XS2A інтерфейс,\n PSD2 вимагає від банків створити повністю робочу динамічну пісочницю(Sandbox), яка забезпечує роботу XS2A інтерфейсу у невиробничому середовищі,\n до червня 2019 року.",
        "THE_2": "",
        "XS2A": "XS2ASandbox",
        "PART_2": "є динамічним середовищем, яке повністю відповідає вимогам специфікації PSG2 NextGen від Berlin Group для доступу до рахунків (XS2A).",
        "PART_3": "Цей портал розробника створений для того, щоб допомогти розробникам TPP розпочати роботу з XS2ASandbox."
      }
    },
    "ARCHITECTURE": {
      "TITLE": "Архітектура та модулі XS2ASandbox",
      "CONTENT": "Компоненти XS2ASandbox з їх зв'язками показані на рисунку 1.1.",
      "CAPTION": "Рисунок 1.1: Компоненти XS2ASandbox"
    },
    "INTERFACE": {
      "TITLE": "Інтерфейс XS2A",
      "CONTENT": {
        "PART_1": "Центральним компонентом",
        "XS2A": "XS2ASandbox",
        "PART_2": "є інтерфейс XS2A, який відповідає вимогам специфікації",
        "PART_3": "(версія 1.3)\nвід Berlin Group і базується на тестових даних. Ви можете відвідати наш",
        "PART_4": "або ознайомитись з",
        "LINK": "опенсорсною імплементацією інтерфейсу XS2A на Github."
      }
    },
    "PROFILE": {
      "TITLE": "ASPSP-профіль",
      "CONTENT": {
        "PART_1": "Крім фактичного інтерфейсу, PSD2 інструктує ASPSPs надавати безкоштовну технічну документацію,\nщо містить, серед іншого, інформацію про підтримувані платіжні продукти та платіжні послуги.\nЦя інформація зберігається в ",
        "ASPSP": "ASPSP-профілі",
        "PART_2": "(банківський профіль),\nствореного на основі yaml-файлу, де банк може надавати доступні продукти оплати (payment products),\nплатіжні послуги (payment services), підтримувані підходи авторизації користувачів (SCA) та інші специфічні для банку параметри."
      },
      "SUBTITLE_1": "Конфігурація активного ASPSP-профілю",
      "LIST": {
        "LI_1": "Підтримуваний підхід SCA: Redirect, Embedded",
        "LI_2": "Доступні види платежів і продукти оплати для кожного типу:",
        "UL_1": {
          "LI_1": "Single (sepa-credit-transfers)",
          "LI_2": "Future-Dated (sepa-credit-transfers)",
          "LI_3": "Bulk (sepa-credit-transfers)",
          "LI_4": "Periodic (sepa-credit-transfers)"
        },
        "LI_3": "Підтвердження коштів: так",
        "LI_4": "URL до Онлайн-банкінгу:",
        "UL_2": {
          "LI_1": "URL для підтвердження платежу: **\n http://localhost:4400/payment-initiation/login?paymentId=encrypted-payment-id&redirectId=redirect-id\n **",
          "LI_2": "URL для скасування платежу: **\n http://localhost:4400/payment-cancellation/login?paymentId=encrypted-payment-id&redirectId=redirect-id\n **",
          "LI_3": "URL для згоди на використання даних облікового запису: **\n http://localhost:4400/account-information/login?encryptedConsentId=encrypted-consent-id&redirectId=redirect-id\n **"
        },
        "LI_5": "Підтримувані типи згоди на використання даних облікового запису:",
        "UL_3": {
          "LI_1": "Dedicated: так",
          "LI_2": "Bank-Offered: так",
          "LI_3": "Global: так",
          "LI_4": "Available Accounts: так"
        },
        "DISABLED": "Функції, які наразі не додані:",
        "LI_6": "Signing Basket",
        "LI_7": "Дельта-звіти"
      },
      "SUBTITLE_2": "Відповідні налаштування ASPSP-профілю у файлі .yaml:"
    },
    "CERTIFICATE": {
      "TITLE": "Сервіс сертифікації TPP",
      "CONTENT": {
        "PART_1": "Зазвичай, перед тим, як отримати доступ до XS2A, TPP повинен буде зареєструватися у своєму національному компетентному органі (NCA)\nі отримати сертифікат",
        "PART_2": "у відповідного Trust Service Provider (TSP).\nОтримання реального сертифіката тільки для цілей тестування потребує надто багато зусиль, тому",
        "XS2A": "XS2ASandbox",
        "PART_3": "додатково імітує вигаданий TSP,\nякий видає сертифікати автентифікації веб-сайту (QWAC). QWAC є частиною eIDAS і може бути більш відомий як ",
        "PART_4": "сертифікат. Для цілей PSD2 сертифікат розширюється QcStatement, що містить відповідні значення, такі, як ролі PSP (див. ",
        "PART_5": "Після вбудовування QWAC у фактичний запит XS2A роль та підпис перевіряються на центральному зворотному проксі,\nперш ніж остаточно передати запит до інтерфейсу."
      }
    },
    "UI": {
      "TITLE": "Інтерфейс для TPP",
      "CONTENT": "Розробники TPP можуть зареєструватися в системі, отримати сертифікат і завантажити тестові дані для своєї програми,\nвикористовуючи згенерований сертифікат і підготовлені дані в інтерфейсі TPP."
    },
    "OBA": {
      "TITLE": "Онлайн-банкінг",
      "CONTENT": "У випадку підходу REDIRECT SCA користувач хоче надати згоду на використання інформації про свій рахунок або підтвердити/скасувати платіж.\nОнлайн-банкінг - це інтерфейс для надання згоди банку. Посилання для підтвердження згоди та підтвердження оплати або скасування\nнадаються у відповіді відповідних ендпоінтів в XS2A."
    },
    "LINKS_TO": {
      "TITLE": "Посилання на середовища",
      "TABLE": {
        "R1_C1": "Сервіс",
        "R1_C2": "Локальне середовище",
        "R1_C3": "XS2ASandbox Демо-середовище",
        "DEVELOPER_PORTAL": "Портал розробника",
        "XS2A_INTERFACE_SWAGGER": "Інтерфейс XS2A",
        "CONSENT_MANAGEMENT_SYSTEM": "Consent management system",
        "LEDGERS": "Ledgers",
        "ASPSP_PROFILE_SWAGGER": "ASPSP-профіль Swagger",
        "TPP_UI": "Інтерфейс TPP",
        "ONLINE_BANKING_UI": "Онлайн-банкінг",
        "ONLINE_BANKING_BACKEND": "Сервер онлайн-банкінгу",
        "CERTIFICATE_GENERATOR": "Генератор сертифікатів"
      }
    },
    "HOW_TO_DOWN": {
      "TITLE": "Як завантажити, налаштувати і запустити проект",
      "SUBTITLE_1": "Вимоги до програмного забезпечення",
      "CONTENT": {
        "PART_1": "XS2ASandbox запускається за допомогою Docker Compose файлу, який можна знайти у docker-compose.yml, та Makefile у директорії проекту.\nАле перед тим, як запустити XS2ASandbox, спочатку перевірте, чи встановлені всі залежності:",
        "PART_2": "Якщо чогось не вистачає, встановіть програму на локальну машину, інакше зібрати проект не вдасться.\nСписок залежностей, які потрібні для використання XS2ASandbox:\nJava 8, NodeJs, Angular CLI, Asciidoctor, jq, Docker, Docker Compose, Maven, PlantUML.\n\nОсь посилання, де можна встановити необхідні залежності:",
        "TH_1": "Залежності",
        "TH_2": "Посилання на залежність",
        "PART_3": "Зупиніть працюючі контейнери в терміналі комбінацією клавіш Control + C.",
        "PART_4": "Ви можете видалити всі контейнери XS2ASandbox з Docker наступною командою:"
      },
      "SUBTITLE_2": "Примітка 1",
      "TEXT_1": "Будь ласка, використовуйте версію Node.js нижче 12 (наприклад, 10.xx або 11.xx). Інакше Angular програми не будуть побудовані через конфлікти версій.",
      "SUBTITLE_3": "Примітка 2",
      "TEXT_2": "Перевірте кількість пам'яті, надану Docker (Відкрити Docker Desktop -> Налаштування -> Додатково -> Пам'ять).\nДля швидкого і безболісного запуску всіх сервісів кількість наданої пам'яті повинна бути не менше 5 Гб.",
      "SUBSECTION_1": {
        "TITLE": "Завантаження XS2ASandbox",
        "PART_1": "Завантажте проект безпосередньо з ",
        "LINK": "GitHub",
        "PART_2": "або скористайтеся командою:"
      },
      "SUBSECTION_2": {
        "TITLE": "Збірка та запуск XS2ASandbox",
        "PART_1": "Після завантаження проекту перейдіть до головної директорії проекту:",
        "PART_2": "Збірка усіх сервісів за допомогою команди:",
        "PART_3": "Після виконання збірки ви можете запустити XS2ASandbox двома способами - за допомогою простої docker команди:",
        "PART_4": "Або за допомогою команд з Makefile:",
        "PART_5": "1. Зібрати та запустити сервіси",
        "PART_6": "2. Запустіть сервіси без збирання"
      }
    },
    "TROUBLES": {
      "TITLE": "Вирішення проблем",
      "PART_1": "Далі зібрані типові помилки, які ви можете отримати під час запуску XS2ASandbox, і надано інструкцію, як їх позбутися:",
      "SUBTITLE_1": "Помилка Liquibase",
      "PART_2": "Цю помилку можна отримати, якщо не вдалося запустити XS2ASandbox раніше. Приклад можливого stack trace:",
      "PART_3": "Можливе рішення:",
      "PART_4": "Знайдіть і видаліть усі папки \"ledgerdbs\" і \"xs2adbs\". Видаліть усі докер-контейнери за допомогою команди:",
      "PART_5": "Перезапустіть усі сервіси.",
      "SUBTITLE_2": "Помилка версії NodeJs",
      "PART_6": "Цю помилку можна отримати через неправильну версію NodeJs (версія вище, ніж 11.x) Приклад можливого stack trace:",
      "PART_7": "Можливе рішення:",
      "PART_8": "Спочатку перевірте версію NodeJs за допомогою команди:",
      "PART_9": "Якщо версія вище, ніж 11.x - змініть версію NodeJs на попередню."
    },
    "HOW_TO_REG": {
      "TITLE": "Як зареєструвати TPP і почати тестування",
      "LIST": {
        "LI_1": "Відкрийте сторінку входу до",
        "LINK": "інтерфейсу користувача TPP",
        "LI_2": "Якщо у вас немає логіна та пароля - зареєструйтеся, натиснувши кнопку \"Реєстрація\".",
        "LI_3": "Зареєструйтеся, створіть сертифікат і увійдіть до системи.\nПримітка: Ідентифікатор ТРР повинен складатися принаймні з 8 цифр, не допускається жодних букв або інших знаків.",
        "LI_4": "Завантажте тестові дані та почніть тестування.",
        "TEXT_1": "Весь порядок дій TPP для того, щоб почати свою роботу з XS2ASandbox, відображений на рисунку 1.2:",
        "TEXT_2": "Рисунок 1.2: Робочий процес для TPP"
      }
    },
    "HOW_TO_CST": {
      "TITLE": "Як кастомізувати портал розробників",
      "TOP_LIST": {
        "LI_1": "Створити файл .json з ім'ям UITheme.",
        "LI_2": "Приклад файлу:",
        "LI_3": "Поля Json файлу.",
        "LIST_1": {
          "LI_1": "globalSettings - обов'язково",
          "INNER_LIST_1": {
            "LI_1": "logo - обов'язково, значення: текстовий рядок, URL або ім'я файлу з розширенням, або ' '",
            "LI_2": "favicon - необов'язковий",
            "LI_2_INNER_LIST_1": {
              "LI_1": "type - обов'язково, значення: текстовий рядок",
              "LI_2": "href - обов'язково, значення: текстовий рядок, http url"
            },
            "LI_3": "facebook - необов'язковий, значення: текстовий рядок, http url",
            "LI_4": "linkedIn - необов'язковий, значення: текстовий рядок, http url",
            "LI_5": "cssVariables - необов'язковий",
            "LI_5_INNER_LIST_1": {
              "LI_1": "colorPrimary - необов'язковий, значення: текстовий рядок, hex",
              "LI_2": "colorSecondary - необов'язковий, значення: текстовий рядок, hex",
              "LI_3": "fontFamily - необов'язково, значення: текстовий рядок, font-name чи font-name,\n font-family",
              "LI_4": "bodyBG - необов'язковий, значення: текстовий рядок, hex",
              "LI_5": "headerBG - необов'язковий, значення: текстовий рядок, hex",
              "LI_6": "headerFontColor - необов'язковий, значення: текстовий рядок, hex",
              "LI_7": "mainBG - необов'язковий, значення: текстовий рядок, hex",
              "LI_8": "footerBG - необов'язковий, значення: текстовий рядок, hex",
              "LI_9": "footerFontColor - необов'язковий, значення: текстовий рядок, hex",
              "LI_10": "anchorFontColor - необов'язковий, значення: текстовий рядок, hex",
              "LI_11": "anchorFontColorHover - необов'язковий, значення: текстовий рядок, hex",
              "LI_12": "heroBG - необов'язковий, значення: текстовий рядок, hex",
              "LI_13": "stepBG - необов'язковий, значення: текстовий рядок, hex",
              "LI_14": "contactsCardBG - необов'язковий, значення: текстовий рядок, hex",
              "LI_15": "testCasesLeftSectionBG - необов'язковий, значення: текстовий рядок, hex",
              "LI_16": "testCasesRightSectionBG - необов'язковий, значення: текстовий рядок, hex"
            }
          },
          "LI_2": "contactInfo - обов'язково",
          "INNER_LIST_2": {
            "LI_1": "name - обов'язково, значення: текстовий рядок",
            "LI_2": "position - обов'язково, значення: текстовий рядок",
            "LI_3": "img - обов'язково, значення: текстовий рядок, URL або ім'я файлу з розширенням",
            "LI_4": "email - необов'язковий, значення: текстовий рядок",
            "LI_5": "phone - необов'язковий, значення: текстовий рядок"
          },
          "LI_3": "officesInfo - обов'язково. Масив з 2 елементів.",
          "INNER_LIST_3": {
            "LI_1": "city - обов'язково, значення: текстовий рядок",
            "LI_2": "company - обов'язково, значення: текстовий рядок",
            "LI_3": "addressFirstLine - обов'язково, значення: текстовий рядок",
            "LI_4": "addressSecondLine - обов'язково, значення: текстовий рядок",
            "LI_5": "phone - необов'язковий, значення: текстовий рядок",
            "LI_6": "email - необов'язковий, значення: текстовий рядок",
            "LI_7": "facebook - необов'язковий, значення: текстовий рядок, http url",
            "LI_8": "linkedIn - необов'язковий, значення: текстовий рядок, http url"
          }
        },
        "LI_4": "Коли ви створюєте файл .json (наприклад, UITheme.json) і заповнюєте всі необхідні поля, помістіть цей файл з логотипом (наприклад, logo.png) та контактною особою (наприклад, contact.png) у папку",
        "LI_5": "Кроки для розміщення файлів у цій папці:",
        "LIST_2": {
          "LI_1": "Перейдіть до локальної кореневої папки (де зберігаються файли налаштування):",
          "LI_2": "Увійдіть до Openshift:",
          "LI_3": "Перейдіть до проекту Openshift.",
          "LI_4": "Ми оберемо середовище розробки для нашого прикладу.",
          "LI_5": "Виберіть одне з наступного:",
          "LI_6": "Скопіюйте файли налаштування до запущеного Developer Portal UI застосування:"
        },
        "LI_6": "Кастомізація завершена, вітаємо!"
      }
    },
    "WHAT_NEXT": {
      "TITLE": "Що далі?",
      "PART_1": "Після завершення всіх кроків з розділу",
      "LINK_1": "Початок роботи",
      "PART_2": "перейдіть до розділу",
      "LINK_2": "Сценарії для тестування",
      "PART_3": "Там ви знайдете підготовлені",
      "POSTMAN": "тести Postman",
      "PART_4": ", опис API інтерфейсу XS2A та інструкції по тестуванню XS2ASandbox зі"
    }
  },
  "TEST_CASES": {
    "TITLE": "Сценарії для тестування",
    "TEXT_1": "Після завантаження тестових даних в систему розробник TPP може перевірити ендпоінти XS2ASandbox за допомогою тестування у Swagger або Postman тестів.\nУ розділі Swagger ви знайдете інформацію про використання Swagger, підготовлені тестові дані (Jsons) для тестування та коротку документацію API.",
    "LINK": "У розділі «Postman тести»",
    "TEXT_2": " ви знайдете інформацію про використання Postman для тестування та архів з підготовленими тестами для Postman.",
    "TEXT_3": "Обидві секції надають тести для REDIRECT та  EMBEDDED SCA для ініціалізації платежів (PIS),\nсервісу даних облікових записів (AIS) та сервісу емітентів платіжних інструментів (PIIS).",
    "INTRODUCTION": {
      "TITLE": "ВСТУП",
      "REDIRECT": "Короткий огляд підходу REDIRECT",
      "EMBEDDED": "Короткий огляд підходу EMBEDDED",
      "TESTING": "Способи тестування",
      "MENU": {
        "LI_1": "Swagger testing",
        "SUBMENU": {
          "LI_0": "Визначені тестові значення для всіх тестів (TAN і PIN):",
          "LI_1": "Redirect:",
          "LIST_1": {
            "LI_1": "Ініціація платежу",
            "LI_2": "Скасування платежу",
            "LI_3": "Ініціація згоди"
          },
          "LI_2": "Embedded:",
          "LI_3": "Інформація про облікові записи користувачів:",
          "LIST_2": {
            "LI_1": "Отримати список облікових записів",
            "LI_2": "Отримати детальну інформацію про обліковий запис",
            "LI_3": "Отримати баланс",
            "LI_4": "Отримати список транзакцій",
            "LI_5": "Отримати детальну інформацію про транзакцію"
          }
        },
        "LI_2": "Postman тести"
      }
    },
    "REDIRECT": {
      "TITLE": "Короткий огляд підходу REDIRECT:",
      "LI_1": "Весь процес SCA з двома різними факторами (наприклад, ім'я користувача / пароль, як доказ знань і одноразовий пароль (TAN) як доказ володіння)\nпередається до ASPSP і виконується безпосередньо між PSU і ASPSP.",
      "LI_2": "Таким чином, PSU має бути перенаправлений з PISP на ASPSP.",
      "LI_3": "SCA PSU виконується безпосередньо між ASPSP і PSU.",
      "LI_4": "Після завершення роботи PSU перенаправляється назад до сторінки TPP."
    },
    "EMBEDDED": {
      "TITLE": "Короткий огляд підходу EMBEDDED:",
      "LI_1": "Весь процес SCA з двома різними факторами (наприклад, ім'я користувача / пароль, як доказ знань, і одноразовий пароль (TAN) як доказ володіння)\nзабезпечується TPP і виконується не безпосередньо між PSU і ASPSP, а з викликами TPP на XS2A Інтерфейс.",
      "LI_2": "TPP використовує попередньо визначені ендпоінти XS2A для завершення авторизації."
    },
    "TESTING": {
      "TEXT_1": "Ви можете використовувати 3 типових тестових сценарії для REDIRECT і EMBEDDED SCA зі Swagger.",
      "TEXT_2": "Щоб відкрити сторінку Swagger з XS2ASandbox, потрібно локально запустити всі сервіси командою з ",
      "LINK_1": "Початок роботи",
      "TEXT_3": "Після запуску всіх сервісів перейдіть до вашої локальної ",
      "LINK_2": "сторінки інтерфейсу XS2A",
      "TEXT_4": "Щоб відкрити сторінку Swagger у хмарі, перейдіть за ",
      "LINK_3": "цим посиланням."
    },
    "TEST_VALUES": {
      "TEXT_1": "Для всіх тестів в Redirect і Embedded необхідно використовувати PIN для входу в обліковий запис і номер TAN для SCA. Будь ласка, використовуйте поштові адреси, до яких маєте доступ, при створенні користувачів, тому що згенерований TAN для підтвердження буде надіслано на пошту обраного користувача.",
      "TEXT_2": "Тестове значення для PIN-коду для всіх автоматично створених користувачів:",
      "TEXT_3": "Тестове значення для TAN (значення можна використовувати, тільки якщо XS2ASandbox запущений локально з 'dev' профілем у налаштуваннях):"
    },
    "POSTMAN_TESTING": {
      "TEXT_1": "Postman - це просте середовище для тестування, де можна просто імпортувати та запускати підготовлені тести.",
      "TEXT_2": "Завантажити останню версію програми Postman для використання підготовлених тестів можна",
      "LINK": "тут.",
      "TEXT_3": "Ви можете завантажити тести Postman зі змінними навколишнього середовища для всіх ендпоінтів, натиснувши кнопку \"Завантажити\" нижче.",
      "DOWNLOAD": "Завантажити",
      "TEXT_4": "Після завантаження файлів імпортуйте їх до Postman і розпочніть тестування."
    },
    "COMPONENTS": {
      "TABS": {
        "DOC": "Документація",
        "PLAY": "Грати з даними"
      },
      "TH": {
        "TH_1": "Хедер",
        "TH_2": "Значення"
      },
      "CODE_AREA": {
        "SHOW": "Показати запит",
        "HIDE": "Сховати запит"
      },
      "RDCT_PAY_INIT_POST": {
        "TITLE_1": "КРОК 1: Створіть платіж",
        "PART_1": "Відкрийте вкладку swagger \"Payment Initiation Service (PIS)\", відкрийте",
        "PART_2": "2. Натисніть ",
        "ITALIC_SPAN": "Спробуйте",
        "PART_3": ". Оберіть:",
        "PART_4": "та",
        "PART_5": ". Значення за замовчуванням буде",
        "PART_6": "в",
        "PART_7": "і",
        "PART_8": "в ",
        "PART_9": "3. Обравши платіжний сервіс та платіжний продукт, заповніть поля хедерів наступними значеннями:",
        "PART_10": "Змініть ",
        "PART_11": "на логін користувача, якого ви обрали (ви можете переглядати користувачів і їх інформацію в TPP-UI)",
        "PART_12": "4. Якщо ви вирішили створити платіж з параметром",
        "PART_13": " у",
        "PART_14": ", вставте в тіло запиту наступний json:",
        "PART_15": "Якщо ви вирішили створити періодичний платіж (periodic), оберіть",
        "PART_16": " у",
        "PART_17": " та вставте в тіло запиту наступний json:",
        "PART_18": "Якщо ви вирішили створити масову оплату, оберіть ",
        "PART_19": " у",
        "PART_20": "та вставте в тіло запиту наступний json:",
        "PART_21": "Змініть ",
        "PART_22": " на справжній IBAN обраного користувача,",
        "PART_23": "якого ви обрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_24": "5. Виконайте запит і отримайте відповідь з кодом 201 і відповідною інформацією.",
        "TITLE_2": "КРОК 2: Авторизуйте платіж",
        "PART_25": "Почніть з процесу авторизації. Перейдіть по посиланню",
        "PART_26": " на сторінку онлайн-банкінгу."
      },
      "RDCT_PAY_DELETE": {
        "TITLE_1": "КРОК 2: Відмініть платіж",
        "PART_1": "Почніть з процесу авторизації. Перейдіть по посиланню",
        "PART_2": " на сторінку онлайн-банкінгу.",
        "PART_3": "1. Розпочніть процес відміни платежу. Відкрийте вкладку swagger \"Payment Initiation Service (PIS)\", відкрийте",
        "PART_4": "Оберіть",
        "PART_5": "та",
        "PART_6": "які ви обирали у першому кроці.",
        "STEP": "",
        "PART_7": "Введіть payment id, який ви отримали у відповіді до запиту у",
        "PART_8": "у полі ",
        "PART_9": "3. Обравши платіжний сервіс та платіжний продукт, заповніть поля хедерів наступними значеннями:",
        "PART_10": "4. Натисніть кнопку",
        "ITALIC_SPAN": "\"Виконати\"",
        "PART_11": " та отримайте відповідь з 200\n HTTP кодом і відповідною інформацією.",
        "TITLE_2": "КРОК 3: Авторизуйте відміну платіжу",
        "PART_12": "1. Почніть з процесу авторизації. Перейдіть по посиланню",
        "PART_13": "на сторінку онлайн-банкінгу."
      },
      "RDCT_CONS": {
        "TITLE_1": "КРОК 1: Створіть згоду",
        "PART_1": "1. Відкрийте вкладку swagger \"Account Information Service (AIS)\", відкрийте",
        "PART_2": "2. Натисніть ",
        "ITALIC_SPAN": "\"Спробуйте\"",
        "PART_3": " Заповніть поля хедерів наступними значеннями:",
        "PART_4": "Змініть ",
        "PART_5": " на логін користувача, якого ви обрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_6": "3. Скопіюйте наступний json у request body запиту:",
        "PART_7": "",
        "PART_8": "",
        "PART_9": "4. Виконайте запит і отримайте відповідь з кодом 201 і відповідною інформацією.",
        "TITLE_2": "КРОК 2: Авторизуйте згоду",
        "PART_10": "1. Почніть з процесу авторизації. Перейдіть по посиланню",
        "PART_11": "на сторінку онлайн-банкінгу."
      },
      "EMB_IN_CR_POST": {
        "PART_25": "6. Почніть процес авторизації платежу.",
        "PART_26": "Звертайте увагу на кількість SCA методів у користувача: якщо користувач не має SCA методів, продовжуйте тестування\nз робочим процесом, описаним у",
        "ITALIC_1": "\"Авторизації платежу для користувача, який не має SCA методів\"",
        "PART_27": ". Для користувача, який має 1 SCA метод, скористуйтесь інструкцією, описаною у ",
        "ITALIC_2": "\"Авторизації платежу для користувача з 1 методом SCA\"",
        "PART_28": ". Якщо користувач має декілька SCA методів, перейдіть до ",
        "ITALIC_3": "\"Авторизації платежу для користувача, який має декілька SCA методів\""
      },
      "EMB_IN_AUTH_POST": {
        "TITLE": "КРОК 2: Авторизуйте платіж",
        "PART_1": "1. Почніть процес авторизації платіжу. Відкрийте вкладку swagger \"Payment Initiation Service (PIS)\", відкрийте",
        "PART_2": ". Оберіть такі самі",
        "PART_3": "і",
        "PART_4": "які ви обрали у першому кроці.",
        "STEP": "",
        "PART_5": "2. Введіть payment id, який ви отримали при створенні платіжу",
        "PART_6": "у поле",
        "PART_7": "3. Обравши платіжний сервіс та платіжний продукт, заповніть поля хедерів наступними значеннями:",
        "PART_8": "Змініть ",
        "PART_9": "на логін користувача, якого ви обрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_10": "Виконайте запит і отримайте відповідь з кодом 201 і відповідною інформацією.",
        "ITALIC_SPAN": "",
        "PART_11": ""
      },
      "EMB_IN_PUT": {
        "TITLE": "КРОК 2: Авторизуйте платіж",
        "SUBTITLE_1": "Авторизація платежу для користувача, який не має SCA методів",
        "PART_1": "5. Продовжуйте авторизацію платежу запитом до",
        "PART_2": "6. Введіть payment id у поле ",
        "PART_3": "та authorisation id у поле",
        "PART_4": ", які ви отримали у відповіді до запиту у відповіді POST ендпоінту, коли розпочали авторизацію.",
        "PART_5": "7. Заповніть поля хедерів наступними значеннями:",
        "PART_6": "Змініть ",
        "PART_7": " на логін користувача, якого ви обрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_8": "8. Вставте в тіло запиту наступний json:",
        "PART_9": "Змініть ",
        "PART_10": " на пароль користувача, якого ви обрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_11": "9. Виконайте запит і отримайте відповідь з",
        "PART_12": "і",
        "PART_13": "у відповіді.",
        "SUBTITLE_2": "Авторизація платежу для користувача з 1 методом SCA",
        "PART_14": "5. Продовжуйте авторизацію платежу запитом до",
        "PART_15": "6. Введіть payment id у поле ",
        "PART_16": "та authorisation id у поле",
        "PART_17": ", які ви отримали у відповіді до запиту у відповіді POST ендпоінту, коли розпочали авторизацію.",
        "PART_18": "7. Заповніть поля хедерів наступними значеннями:",
        "PART_19": "Змініть ",
        "PART_20": " на логін користувача, якого ви обрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_21": "8. Вставте в тіло запиту наступний json:",
        "PART_22": "Змініть ",
        "PART_23": " на пароль користувача, якого ви обрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_24": "9. Виконайте запит і отримайте відповідь з",
        "PART_25": "і",
        "PART_26": "у відповіді.",
        "PART_27": "10. Виконайте запит до цього PUT ендпоінту ще раз, але цього разу змініть тіло запиту на наступний json:",
        "PART_28": "Користувач має тільки один SCA метод, тому згенерований ТАН",
        "PART_29": "був надісланий на пошту користувача, і вам потрібно передати ці дані у запиті.\nВідповідь повинна мати",
        "PART_30": "та містити",
        "SUBTITLE_3": "Авторизація платежу для користувача, який має декілька SCA методів",
        "PART_31": "5. Продовжуйте авторизацію платежу запитом до",
        "PART_32": "6. Введіть payment id у поле ",
        "PART_33": "та authorisation id у поле",
        "PART_34": ", які ви отримали у відповіді до запиту у відповіді POST ендпоінту, коли розпочали авторизацію.",
        "PART_35": "7. Заповніть поля хедерів наступними значеннями:",
        "PART_36": "Змініть ",
        "PART_37": " на логін користувача, якого ви обрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_38": "8. Вставте в тіло запиту наступний json:",
        "PART_39": "Змініть ",
        "PART_40": " на пароль користувача, якого ви обрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_41": "9. Виконайте запит і отримайте відповідь з",
        "PART_42": " і відповідною інформацією.",
        "PART_43": "10. Виконайте запит до цього PUT ендпоінту ще раз, але цього разу змініть тіло запиту на наступний json:",
        "PART_44": "Змініть",
        "PART_45": "на будь-яке значення authenticationMethodId користувача за вашим вибором.\nВідповідь повинна мати",
        "PART_46": " та містити",
        "PART_47": "11. Виконайте запит до цього PUT ендпоінту ще раз, змініть тіло запиту на наступний json:",
        "PART_48": "SCA метод був обраний, тому згенерований ТАН",
        "PART_49": " був надісланий на пошту користувача, і вам потрібно передати ці дані у запиті.",
        "PART_50": "Відповідь повинна мати",
        "PART_51": " та містити"
      },
      "EMB_IN_GET": {
        "PART_1": "1. Спробуйте зробити запит до ендоінту GET",
        "PART_2": "щоб отримати інформацію про згоду,\nабо до ендпоінту GET",
        "PART_3": "щоб перевірити поточний статус згоди.",
        "PART_4": "2. Спробуйте зробити запит до ендоінту GET",
        "PART_5": "щоб отримати інформацію про авторизацію згоди, або\nдо ендпоінту GET",
        "PART_6": "щоб перевірити поточний статус авторизації.",
        "SUBTITLE": "Ключові кроки",
        "PART_7": "1. Оберіть",
        "PART_8": "та",
        "PART_9": ". Використовувайте ти ж самі значання, що ви використовували у кроках раніше.",
        "PART_10": "2. Обравши платіжний сервіс та платіжний продукт, заповніть поля хедерів наступними значеннями:",
        "PART_11": "Змініть ",
        "PART_12": " на логін користувача, якого ви обрали (ви можете переглядати користувачів і їх інформацію в TPP-UI)"
      },
      "EMB_CANCEL_POST": {
        "PART_25": "6. Почніть процес авторизації платежу. Ви можете знайти інструкцію, як авторизувати платіж, вище у секції \"Створення платіжу\".\nВажливо: не авторизуйте платіж до кінця, інакше процес відміни буде неможливий.",
        "PART_26": "7. Після авторизації платежу розпочніть процес відміни.",
        "PART_27": "Зверніть увагу на опцію ASPSP-Профайлу",
        "PART_28": "Тільки якщо цей параметр має значення",
        "PART_29": ", можна використовувати нижче описаний процес тестування.",
        "BOLD_1": "Payment cancellation without authorisation",
        "PART_30": "",
        "PART_31": "Якщо цей параметр має значення",
        "PART_32": ", звертайте увагу на кількість SCA методів у користувача: якщо користувач не має SCA методів, продовжуйте тестування\nз робочим процесом, описаним у",
        "BOLD_2": "Авторизації платежу для користувача, який не має SCA методів",
        "PART_33": ". Для користувача, який має 1 SCA метод, скористуйтесь інструкцією, описаною у ",
        "BOLD_3": "Авторизації платежу для користувача з 1 методом SCA",
        "PART_34": ". Якщо користувач має декілька SCA методів, перейдіть до ",
        "BOLD_4": "Авторизації платежу для користувача, який має декілька SCA методів"
      },
      "EMB_CANS_DELETE": {
        "TITLE": "STEP 2: Payment cancellation authorisation"
      },
      "EMB_CANS_POST": {
        "TITLE": "КРОК 2: Авторизуйте відміну платіжу",
        "PART_1": "4. Почніть процес авторизації відміни платіжу. Відкрийте вкладку swagger \"Payment Initiation Service (PIS)\", відкрийте",
        "PART_2": ". Оберіть такі самі",
        "PART_3": "і",
        "PART_4": "які ви обрали у першому кроці.",
        "STEP": "",
        "PART_5": "5. Введіть payment id, який ви отримали при створенні платіжу ",
        "PART_6": "у поле",
        "PART_7": "6. Заповніть поля хедерів наступними значеннями:",
        "PART_8": "Змініть ",
        "PART_9": " на логін користувача, якого ви обрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_10": "7. Виконайте запит і отримайте відповідь з кодом 201 і відповідною інформацією."
      },
      "EMB_CANS_PUT": {
        "TITLE": "КРОК 2: Авторизація скасування платежу",
        "SUBTITLE_1": "Авторизація скасування платежу для користувача без методів SCA",
        "PART_1": "8. Завершіть авторизацію скасування платежу, зробивши виклик до",
        "PART_2": ". Виберіть той самий",
        "PART_3": "і",
        "PART_4": "який ви обрали в першому кроці.",
        "STEP": "",
        "PART_5": "Заповніть хедери тими ж значеннями, що і в попередньому виклику POST.",
        "PART_6": "9. Введіть payment id, який  ви отримали у першому кроці ",
        "PART_7": "у поле",
        "PART_8": ". Введіть cancellation id, який ви також отримали у відповіді в попередньому кроці у поле",
        "PART_9": "10. Вставте в тіло запиту наступний json:",
        "PART_10": "Вставте у ",
        "PART_11": " пароль користувача, якого ви вибрали (ви можете переглядати користувачів і їхню інформацію в TPP-UI).",
        "PART_12": "11. Зробіть виклик до ендпоінту і отримайте у відповідь",
        "SUBTITLE_2": "Авторизація скасування платежу для користувача з використанням одного методу SCA",
        "PART_13": "8. Завершіть авторизацію скасування платежу, зробивши виклик до",
        "PART_14": ". Виберіть той самий",
        "PART_15": "і",
        "PART_16": "який ви обрали в першому кроці.",
        "PART_17": " Заповніть хедери тими ж значеннями, що і в попередньому виклику POST.",
        "PART_18": "9. Введіть payment id, який  ви отримали у першому кроці",
        "PART_19": " у поле ",
        "PART_20": ". Введіть cancellation id, який ви також отримали у відповіді в попередньому кроці у поле",
        "PART_21": "10. Вставте в тіло запиту наступний json:",
        "PART_22": "Вставте у  ",
        "PART_23": " пароль користувача, якого ви вибрали (ви можете переглядати користувачів і їхню інформацію в TPP-UI).",
        "PART_24": "11. Зробіть виклик до ендпоінту і отримайте у відповідь",
        "PART_25": "12. Знову зробіть виклик до ендпоінту PUT, але цього разу оновіть тіло запиту: заповніть його наступним json:",
        "PART_26": "Користувач має тільки один метод SCA, тому згенерований TAN ",
        "PART_27": "був відправлений користувачеві на пошту (мобільна авторизація поки що неможлива), і тепер вам потрібно ввести ці дані і виконати виклик до ендпоінту PUT. Відповідь має бути",
        "SUBTITLE_3": "Авторизація скасування платежу для користувача з декількома методами SCA",
        "PART_28": "8. Завершіть авторизацію скасування платежу, зробивши виклик",
        "PART_29": ". Виберіть той самий",
        "PART_30": "і",
        "PART_31": "який ви обрали в першому кроці.",
        "PART_32": "Заповніть хедери тими ж значеннями, що і в попередньому виклику POST.",
        "PART_33": "9. Введіть payment id, який  ви отримали у першому кроці",
        "PART_34": " у поле",
        "PART_35": ". Введіть cancellation id, який ви також отримали у відповіді в попередньому кроці у поле",
        "PART_36": "10. Вставте в тіло запиту наступний json:",
        "PART_37": "Вставте у  ",
        "PART_38": " пароль користувача, якого ви вибрали (ви можете переглядати користувачів і їхню інформацію в TPP-UI).",
        "PART_39": "11. Зробіть виклик до ендпоінту і отримайте у відповідь",
        "PART_40": "та список методів авторизації.",
        "PART_41": "12. Знову зробіть виклик до ендпоінту PUT, але цього разу оновіть тіло запиту: заповніть його наступним json:",
        "PART_42": "Замініть шаблон",
        "PART_43": " на будь-яке значення authenticationMethodId за вашим вибором. Відповідь має бути",
        "PART_44": "13. Знову зробіть виклик до ендпоінту PUT, але цього разу оновіть тіло запиту: заповніть його наступним json:",
        "PART_45": "Метод SCA був обраний, тому згенерований TAN",
        "PART_46": "був відправлений користувачеві на пошту (мобільна авторизація поки що неможлива), і тепер вам потрібно ввести ці дані і виконати виклик до ендпоінту PUT. Відповідь має бути"
      },
      "EMB_CANS_GET": {
        "PART_1": "12. Спробуйте зробити запит до ендоінту GET",
        "PART_2": "щоб перевірити поточний статус відміни платіжу.",
        "PART_3": "13. Спробуйте зробити запит до ендоінту",
        "PART_4": "щоб перевірити поточний статус платіж (він повинен бути `CANC`, відмінено)."
      },
      "EMB_CONS_AUTH": {
        "TITLE": "КРОК 2: Авторизуйте згоду",
        "PART_1": "1. Почніть процес авторизації згоди. Відкрийте вкладку swagger \"Account Initiation Service (AIS)\", відкрийте",
        "PART_2": "2. Натисніть \"Спробуйте\". Введіть consent id, який ви отримали у першому кроці ",
        "STEP": "",
        "PART_3": " у поле",
        "PART_4": "3. Заповніть поля хедерів наступними значеннями:",
        "PART_5": "Змініть ",
        "PART_6": " на логін користувача, якого ви обрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_7": "4. Виконайте запит і отримайте відповідь з кодом 201 і відповідною інформацією.",
        "ITALIC": "",
        "PART_8": ""
      },
      "EMB_CONS_PUT": {
        "TITLE": "КРОК 2: Авторизація згоди",
        "SUBTITLE_1": "Авторизація згоди для користувача без методів SCA",
        "PART_1": "4. Почніть авторізацію з натіскання кнопки",
        "ITALIC": "\"Виконати\"",
        "PART_2": ". У результаті ви отримаєте 201 HTTP code\n та відповідну інформацію.",
        "PART_3": "5. Завершіть авторизацію згоди, зробивши виклик до",
        "PART_4": "6. Введіть consent id у поле",
        "PART_5": "та autorisation id у поле ",
        "PART_6": " Значення цих ідентифікаторів були отримані у попередньому виклику POST.",
        "PART_7": "7. Заповніть поля хедерів наступними значеннями:",
        "PART_8": "8. Вставте в тіло запиту наступний json:",
        "PART_9": "Змініть ",
        "PART_10": " на пароль користувача, якого ви вибрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_11": "9. Виконайте виклик до ендпоінту і отримайте ",
        "PART_12": "і",
        "PART_13": "у відповідь.",
        "SUBTITLE_2": "Авторизація згоди для користувача з одним методом SCA",
        "PART_14": "5. Завершіть авторизацію згоди, зробивши виклик до",
        "PART_15": "6. Введіть consent id у поле",
        "PART_16": "та autorisation id у поле",
        "PART_17": "Значення цих ідентифікаторів були отримані у попередньому виклику POST.",
        "PART_18": "7. Заповніть поля хедерів наступними значеннями:",
        "PART_19": "Змініть ",
        "PART_20": " на ім'я користувача, якого ви вибрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_21": "8. Вставте в тіло запиту наступний json:",
        "PART_22": "Змініть ",
        "PART_23": " на пароль користувача, якого ви вибрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_24": "9.  Виконайте виклик до ендпоінту і отримайте",
        "PART_25": "і",
        "PART_26": " у відповідь.",
        "PART_27": "10. Знову зробіть виклик до ендпоінту PUT, але цього разу оновіть тіло запиту: вставте наступний json:",
        "PART_28": "Користувач має тільки один метод SCA, тому згенерований TAN",
        "PART_29": "був відправлений користувачеві на пошту (мобільна авторизація поки що неможлива), і тепер вам потрібно ввести ці дані і виконати команду PUT.",
        "PART_30": "Відповідь має бути успішною",
        "PART_31": "і мати поле",
        "SUBTITLE_3": "Авторизація згоди для користувача з декількома методами SCA",
        "PART_32": "5. Завершіть авторизацію згоди, зробивши виклик до",
        "PART_33": "6. Введіть consent id у поле",
        "PART_34": "та autorisation id у поле",
        "PART_35": "Значення цих ідентифікаторів були отримані у попередньому виклику POST.",
        "PART_36": "7. Заповніть поля хедерів наступними значеннями:",
        "PART_37": "8. Вставте в тіло запиту наступний json:",
        "PART_38": "Змініть ",
        "PART_39": " на пароль користувача, якого ви вибрали (ви можете переглядати користувачів і їх інформацію в TPP-UI).",
        "PART_40": "9. Виконайте виклик до ендпоінту і отримайте ",
        "PART_41": "та список методів авторизації у відповідь.",
        "PART_42": "10. Знову зробіть виклик до ендпоінту PUT, але цього разу оновіть тіло запиту: вставте наступний json:",
        "PART_43": "Змініть",
        "PART_44": " на будь-яке значення authenticationMethodId за вашим вибором. Відповідь має бути ",
        "PART_45": "і мати ",
        "PART_46": "11. Знову зробіть виклик до ендпоінту PUT, але цього разу оновіть тіло запиту: вставте наступний json:",
        "PART_47": "Метод SCA був обраний, тому згенерований TAN",
        "PART_48": "був відправлений користувачеві на пошту (мобільна авторизація поки що неможлива), і тепер потрібно ввести ці дані і виконати команду PUT.",
        "PART_49": "Відповідь має бути",
        "PART_50": "і мати поле"
      },
      "EMB_CONS_GET": {
        "PART_1": "1. Спробуйте зробити запит до ендоінту GET",
        "PART_2": "щоб отримати інформацію про згоду,\nабо до ендпоінту GET",
        "PART_3": ", щоб перевірити поточний статус згоди.",
        "PART_4": "2. Спробуйте зробити запит до ендоінту GET ",
        "PART_5": "щоб отримати інформацію про авторизацію згоди, або\nдо ендпоінту GET ",
        "PART_6": ", щоб перевірити поточний статус авторизації."
      },
      "AC_INF_ACS": {
        "PART_1": "1. Спробуйте зробити запит до GET ендпоінту",
        "PART_2": "для того, щоб отримати інформацію акаунту за допомогою обраного id згоди.",
        "PART_3": "Змініть значення PSU-ID у ",
        "PART_4": " на обраний id згоди."
      },
      "AC_INF_AC": {
        "PART_1": "1. Спробуйте зробити запит до GET ендпоінту",
        "PART_2": "для того, щоб отримати інформацію облікового запису за допомогою обраного id згоди.",
        "PART_3": "Змініть значення PSU-ID у ",
        "PART_4": " на обраний id згоди."
      },
      "AC_INF_BAL": {
        "PART_1": "1. Спробуйте зробити запит до GET ендпоінту",
        "PART_2": "для того, щоб отримати список балансів облікового запису",
        "PART_3": "Змініть значення PSU-ID у ",
        "PART_4": " на обраний id згоди."
      },
      "AC_INF_TRS": {
        "PART_1": "1. Спробуйте зробити запит до GET ендпоінту",
        "PART_2": "для того, щоб отримати список транзакцій з обраним статусом",
        "PART_3": "Змініть значення PSU-ID у ",
        "PART_4": " на обраний id згоди."
      },
      "AC_INF_TR": {
        "PART_1": "1. Спробуйте зробити запит до GET ендпоінту",
        "PART_2": "для того, щоб отримати транзакцію облікового запису з поточним  id",
        "PART_3": "Змініть значення PSU-ID у ",
        "PART_4": " на обраний id згоди."
      }
    }
  },
  "FAQ": {
    "TITLE": "Frequently Asked Questions",
    "CONSENTS": {
      "TITLE": "Згода на використання даних облікового запису",
      "SUBTITLE_1": "Чому я не можу створити згоду?",
      "PART_1": "Роль у сертифікаті QWAC не містить роль AIS. У цьому випадку ви повинні отримати подібну помилку:",
      "PART_2": "Рішення: або створіть новий сертифікат, що містить AIS ролі, і вставте цей сертифікат у ваш запит, або декодуйте ваш сертифікат і перевірте qcStatement, який повинен містити \"PSP_AI\".",
      "PART_3": "Інша можливість полягає в тому, що атрибут \"recurringIndicator\" в межах вашого запиту встановлюється в \"false\", в той час як атрибут \"frequencyPerDay\" не дорівнює \"1\".\n За замовчуванням \"recurringIndicator\" має бути \"true\", оскільки TPP хоче отримати доступ до даних облікового запису у вказаний проміжок часу.\n Однак, коли TPP хоче просто відобразити список можливих облікових записів, достатньо одноразового доступу.\n У цьому випадку ви повинні отримати таку помилку:",
      "PART_4": "Рішення: Якщо ви хочете отримати доступ до даних облікового запису, використовуючи цю згоду лише один раз, змініть значення \"frequencyPerDay\" на \"1\".\nВ іншому випадку призначте \"true\" для \"recurringIndicator\".",
      "SUBTITLE_2": "Чому я не можу отримати доступ до даних свого облікового запису?",
      "PART_5": "Можливо, що видана згода не дозволяє цю операцію.\nПогодження AIS визначає три рівні доступу. Перший рівень дозволяє отримати доступ до \"рахунків\", другий - до \"балансів\", а третій - до \"транзакцій\".\nМожливі комбінації, а вибір \"балансів\" або \"транзакцій\" також надає доступ до \"рахунків\".\nЗгода, що надає доступ до, наприклад, рахунків і транзакцій, не дозволяє відображати баланси.",
      "PART_6": "",
      "TODO": "",
      "PART_7": "Рішення: Потбірно створити нову згоду, що дозволяє отримати доступ до відповідних даних",
      "PART_8": "Іншою причиною може бути те, що згода є недійсною.\nТермін дії згоди, наприклад, автоматично закінчується, коли перевищується \"термін дії\", визначений у згоді.\nМожливо, виникла помилка під час виконання автентифікація."
    },
    "STRONG": {
      "TITLE": "Strong Customer Authentication",
      "SUBTITLE_1": "How can I change the transaction/consent status?",
      "PART_1": "By default a new created transaction/consent has the status",
      "RECEIVED": "\"received\"",
      "PART_2": ". In order to perform SCA using\n REDIRECT approach, the sandbox provides a Redirect Server where the status\n gets updated depending on the PSU. Since SCA for REDIRECT is simplified\n for this sandbox, it is enough to pass a PSU-ID via Query-Parameter to\n simulate the whole SCA. An example is provided in the following:",
      "PART_3": "The Query Parameter psu-id is mandatory. If it is not provided, the\n Redirect Server will display a default error message.",
      "SUBTITLE_2": "Why can't I change the transaction/consent status using a specific PSU?",
      "PART_4": "If the transaction/consent status is \"received\", it can be possible that\n the PSU-ID does not match IBAN in the payment initiation or consent\n creation request. The mapping between PSU-ID and IBAN(s) is documented in\n the developer portal. If the status doesn't change even though SCA was\n performed and the IBAN matches the PSU-ID, check the PSU-ID for typos and\n case sensitivity."
    },
    "CERTIFICATES": {
      "TITLE": "Сертифікати",
      "SUBTITLE_1": "Як створити дійсний сертифікат?",
      "PART_1": "Щоб отримати доступ до API XS2A, TPP має мати дійсний сертифікат автентифікації веб-сайту (QWAC),\n який зазвичай отримує зареєстрований постачальник довірчих послуг. Для використання XS2ASandbox можна видати тестові сертифікати тут:",
      "PART_2": ".\n Ви отримуєте сертифікат, що підписується самостійно ",
      "PART_3": "і відповідний закритий ключ ",
      "PART_4": "вбудований у ",
      "PART_5": "файл.",
      "SUBTITLE_2": "Як вбудувати сертифікат у запит?",
      "PART_6": "Після отримання QWAC потрібно вставити його у свій запит. Існує багато інструментів для виконання викликів REST.\nМи пояснюємо конфігурацію з двома найпоширенішими - cURL і Postman.\ncURL: додайте файл ",
      "PART_7": " використовуючи",
      "PART_8": "і закритий ключ за допомогою",
      "PART_9": ". Зауважте, що вам може знадобитися адаптувати відносний шлях до файлів.\nPostman: Перейдіть до пункту",
      "PART_10": "і встановіть URL-адресу хосту (у нашому прикладі це буде",
      "PART_11": "). Зверніть увагу, що ",
      "PART_12": " а також порт 443 вже встановлені. Потім додайте файл",
      "PART_13": " та файл",
      "PART_14": "  Пароль повинен залишатися порожнім.",
      "SUBTITLE_3": "Чому сертифікат QWAC не працює?",
      "PART_15": "Запити можуть не працювати, навіть якщо додано сертифікат. Це відбувається, коли термін дії сертифікатів закінчується.\nКожен сертифікат має атрибут \"validUntil\" з терміном дії. У цьому випадку ви повинні отримати таку помилку:",
      "PART_16": "Потрібно PSU для створення нової згоди і використання нової згоди.\nІнша можливість полягає в тому, що сертифікат не містить потрібну вам роль для вашого запиту.\nНаприклад, роль \"PIS\" не дозволяє створювати згоди. У такому випадку ви повинні отримати таку помилку:"
    }
  },
  "CONTACT": {
    "TITLE_1": "Маєте питання?",
    "SUBTITLE": "Запитайте нашого спеціалиста.",
    "TITLE_2": "Контакти"
  }
}
